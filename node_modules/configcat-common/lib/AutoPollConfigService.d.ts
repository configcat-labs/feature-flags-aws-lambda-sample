import { AutoPollOptions } from "./ConfigCatClientOptions";
import type { IConfigFetcher } from "./ConfigFetcher";
import { ConfigServiceBase, IConfigService, RefreshResult } from "./ConfigServiceBase";
import { ProjectConfig } from "./ProjectConfig";
export declare class AutoPollConfigService extends ConfigServiceBase<AutoPollOptions> implements IConfigService {
    private initialized;
    private initialization;
    private signalInitialization;
    private timerId?;
    constructor(configFetcher: IConfigFetcher, options: AutoPollOptions);
    private waitForInitializationAsync;
    getConfig(): Promise<ProjectConfig | null>;
    refreshConfigAsync(): Promise<[RefreshResult, ProjectConfig | null]>;
    dispose(): void;
    protected onConfigUpdated(newConfig: ProjectConfig): void;
    protected onConfigChanged(newConfig: ProjectConfig): void;
    protected setOnlineCore(): void;
    protected setOfflineCore(): void;
    private startRefreshWorker;
    private stopRefreshWorker;
    private refreshWorkerLogic;
}
//# sourceMappingURL=AutoPollConfigService.d.ts.map